-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."hub_Clients"
(
    hk_id_client integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    bk_id_client integer NOT NULL,
    load_date date NOT NULL,
    record_source integer NOT NULL,
    CONSTRAINT "Clients_pkey" PRIMARY KEY (hk_id_client)
);

CREATE TABLE IF NOT EXISTS public."hub_Deals"
(
    hk_id_deal integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    bk_id_deal integer NOT NULL,
    load_date date NOT NULL,
    record_source integer NOT NULL,
    CONSTRAINT "Deals_pkey" PRIMARY KEY (hk_id_deal)
);

CREATE TABLE IF NOT EXISTS public."hub_Disks"
(
    hk_id_disk integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    bk_id_disk integer NOT NULL,
    load_date date NOT NULL,
    record_source integer NOT NULL
);

CREATE TABLE IF NOT EXISTS public."hub_Movies"
(
    hk_id_movie integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    bk_id_movie integer NOT NULL,
    load_date date NOT NULL,
    record_source integer NOT NULL,
    PRIMARY KEY (hk_id_movie)
);

CREATE TABLE IF NOT EXISTS public.link_clients_deals
(
    "hk_id_clients-deals" integer NOT NULL,
    hk_id_client integer NOT NULL,
    hk_id_deal integer NOT NULL,
    load_date date NOT NULL,
    record_source integer NOT NULL,
    PRIMARY KEY ("hk_id_clients-deals")
);

CREATE TABLE IF NOT EXISTS public.link_deals_disks
(
    "hk_id_deals-disks" integer NOT NULL,
    hk_id_disk integer NOT NULL,
    hk_id_deal integer NOT NULL,
    load_date date NOT NULL,
    record_source integer NOT NULL,
    PRIMARY KEY ("hk_id_deals-disks")
);

CREATE TABLE IF NOT EXISTS public.link_movies_disks
(
    "hk_id_disks-movie" integer NOT NULL,
    hk_id_disk integer NOT NULL,
    hk_id_movie integer NOT NULL,
    load_date date NOT NULL,
    record_source integer NOT NULL,
    PRIMARY KEY ("hk_id_disks-movie")
);

CREATE TABLE IF NOT EXISTS public.sat_clients
(
    hk_id_client integer NOT NULL,
    load_date date NOT NULL,
    record_source integer NOT NULL,
    surname character varying NOT NULL,
    name character varying NOT NULL,
    "passport num" integer NOT NULL,
    adress character varying NOT NULL,
    "phone num" numeric NOT NULL,
    PRIMARY KEY (load_date, hk_id_client)
);

CREATE TABLE IF NOT EXISTS public.sat_movies
(
    hk_id_movie integer NOT NULL,
    load_date date NOT NULL,
    record_source integer NOT NULL,
    title character varying NOT NULL,
    genre character varying NOT NULL,
    date date NOT NULL,
    director character varying NOT NULL,
    duration character varying NOT NULL,
    "main role" character varying NOT NULL,
    PRIMARY KEY (load_date, hk_id_movie)
);

CREATE TABLE IF NOT EXISTS public.sat_disks
(
    hk_id_disk integer NOT NULL,
    load_date date NOT NULL,
    record_source integer NOT NULL,
    type character varying NOT NULL,
    cost integer NOT NULL,
    PRIMARY KEY (hk_id_disk, load_date)
);

CREATE TABLE IF NOT EXISTS public.sat_deals
(
    hk_id_deal integer NOT NULL,
    load_date date NOT NULL,
    record_source integer NOT NULL,
    amount character varying NOT NULL,
    "date of deal" date NOT NULL,
    "date of issue" date NOT NULL,
    "return date" date NOT NULL,
    PRIMARY KEY (load_date, hk_id_deal)
);

ALTER TABLE IF EXISTS public.link_clients_deals
    ADD CONSTRAINT fk_deals FOREIGN KEY (hk_id_deal)
    REFERENCES public."hub_Deals" (hk_id_deal) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.link_clients_deals
    ADD CONSTRAINT fk_clients FOREIGN KEY (hk_id_client)
    REFERENCES public."hub_Clients" (hk_id_client) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.link_deals_disks
    ADD CONSTRAINT fk_deals FOREIGN KEY (hk_id_deal)
    REFERENCES public."hub_Deals" (hk_id_deal) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.link_deals_disks
    ADD CONSTRAINT fk_disks FOREIGN KEY (hk_id_disk)
    REFERENCES public."hub_Disks" (hk_id_disk) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.link_movies_disks
    ADD CONSTRAINT fk_disks FOREIGN KEY (hk_id_disk)
    REFERENCES public."hub_Disks" (hk_id_disk) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.link_movies_disks
    ADD CONSTRAINT fk_movies FOREIGN KEY (hk_id_movie)
    REFERENCES public."hub_Movies" (hk_id_movie) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sat_clients
    ADD CONSTRAINT fk_sat_clients FOREIGN KEY (hk_id_client)
    REFERENCES public."hub_Clients" (hk_id_client) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sat_movies
    ADD CONSTRAINT fk_sat_movies FOREIGN KEY (hk_id_movie)
    REFERENCES public."hub_Movies" (hk_id_movie) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sat_disks
    ADD CONSTRAINT fk_sat_disks FOREIGN KEY (hk_id_disk)
    REFERENCES public."hub_Disks" (hk_id_disk) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sat_deals
    ADD CONSTRAINT fk_sat_deals FOREIGN KEY (hk_id_deal)
    REFERENCES public."hub_Deals" (hk_id_deal) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;